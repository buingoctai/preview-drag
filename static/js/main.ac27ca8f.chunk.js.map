{"version":3,"sources":["enhance.js","components/ImageGrid.js","components/DataList.js","App.js","index.js"],"names":["enhance","App","dataList","className","subClassName","displayStyle","itemSize","margin","movingUnit","numItemRow","handleIndexUpdate","useState","data","setData","srcIndex","useRef","isReverting","enterIndex","finishCheck","orderList","Array","from","length","keys","isDropOnContainer","setSrcIndex","val","current","setIsReverting","setFinishCheck","setOrderList","setIsDropOnContainer","useEffect","handleDragStart","event","stopImmediatePropagation","target","id","onAddingTransition","dataTransfer","dropEffect","indexOf","parseInt","handleDragEnd","setTimeout","onRevertingDataList","updatedData","i","elementId","item","push","onRemovingTransition","handleDragOver","preventDefault","handleDragEnter","element","currentTarget","targetIndex","onChoosingAnimationStyle","start","end","arrangedOrderList","onRearrangeDataList","dataArr","style","opacity","handleDragLeave","handleDrop","oldIndex","getData","newIndex","handleDropContainer","fullHeightItemRow","Math","floor","height","offsetY","lastElm","document","querySelector","Event","dispatchEvent","addEventListener","querySelectorAll","forEach","e","removeEventListener","srcItem","splice","elms","startIndex","endIndex","handleAddingListAnimation","handleAddingGridAnimation","onEnablePointerEvents","deltaX","deltaY","elmIndex","getCurrentTranslate","x","y","z","transition","transform","crossMovingIdxs","detectCrossMovingIdxs","numRowDiff","detectNumDiffRow","width","includes","pointerEvents","detectCrossMovingPoints","startPoints","endPoints","unshift","filter","belongStartIdx","belongEndIdx","abs","split","map","numStr","onDragOver","onDragEnter","img","index","display","float","border","title","src","url","alt","draggable","background","thumb","sub","EXAMPLE_DATA","EXAMPLE_IMAGES","props","console","log","flexDirection","WIDTH_ITEM_GRID","HEIGHT_ITEM_GRID","WIDTH_ITEM_LIST","HEIGHT_ITEM_LIST","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.ac27ca8f.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\n\r\nconst enhance = (App) => ({\r\n  dataList,\r\n  className,\r\n  subClassName,\r\n  displayStyle,\r\n  itemSize,\r\n  margin,\r\n  movingUnit,\r\n  numItemRow = 1,\r\n  handleIndexUpdate,\r\n}) => {\r\n  const [data, setData] = useState(dataList);\r\n  const srcIndex = useRef(\"\");\r\n  const isReverting = useRef(true);\r\n  const enterIndex = useRef(\"\"); // Fix fire dragenter many time\r\n  const finishCheck = useRef(null); // Fix fire dragenter many time\r\n  const orderList = useRef(Array.from(Array(dataList.length).keys()));\r\n  const isDropOnContainer = useRef(false);\r\n\r\n  const setSrcIndex = (val) => {\r\n    srcIndex.current = val;\r\n  };\r\n\r\n  const setIsReverting = (val) => {\r\n    isReverting.current = val;\r\n  };\r\n\r\n  // Fix fire dragenter many time\r\n  const setEnterIndex = (val) => {\r\n    enterIndex.current = val;\r\n  };\r\n\r\n  const setFinishCheck = (val) => {\r\n    finishCheck.current = val;\r\n  };\r\n\r\n  const setOrderList = (val) => {\r\n    orderList.current = val;\r\n  };\r\n\r\n  const setIsDropOnContainer = (val) => {\r\n    isDropOnContainer.current = val;\r\n  };\r\n\r\n  useEffect(() => {\r\n    const handleDragStart = (event) => {\r\n      event.stopImmediatePropagation();\r\n      const {\r\n        target: { id: srcIndex },\r\n      } = event;\r\n\r\n      setEnterIndex(srcIndex); // fix fire dragenter many time\r\n      setFinishCheck(false); // fix fire dragenter many time\r\n      setIsReverting(true);\r\n      setSrcIndex(srcIndex);\r\n      setOrderList(Array.from(Array(dataList.length).keys()));\r\n      setIsDropOnContainer(false);\r\n      onAddingTransition();\r\n      event.dataTransfer.dropEffect = \"move\";\r\n      event.dataTransfer.setData(\r\n        \"startIndex\",\r\n        orderList.current.indexOf(parseInt(srcIndex))\r\n      );\r\n    };\r\n\r\n    const handleDragEnd = (event) => {\r\n      event.stopImmediatePropagation();\r\n      setTimeout(\r\n        () => {\r\n          if (isReverting.current) {\r\n            onRevertingDataList();\r\n          } else {\r\n            // let updatedData = [...data];\r\n            let updatedData = [];\r\n            let updatedIndex = [];\r\n\r\n            for (let i = 0; i < orderList.current.length; i++) {\r\n              const elementId = orderList.current[i];\r\n\r\n              // if (updatedIndex.includes(elementId)) {\r\n              //   continue;\r\n              // } else {\r\n              //   updatedIndex.push(orderList.current.indexOf(elementId));\r\n              // }\r\n              // updatedData = onRearrangeDataList({\r\n              //   dataArr: [...updatedData],\r\n              //   srcIndex: elementId,\r\n              //   targetIndex: orderList.current.indexOf(elementId),\r\n              // });\r\n              const item = data[elementId];\r\n              updatedData.push(item);\r\n            }\r\n\r\n            onRemovingTransition();\r\n            onRevertingDataList();\r\n            setData(updatedData);\r\n          }\r\n        },\r\n        isDropOnContainer ? 400 : 0\r\n      );\r\n    };\r\n\r\n    const handleDragOver = (event) => {\r\n      if (event.preventDefault) {\r\n        event.preventDefault();\r\n      }\r\n      return false;\r\n    };\r\n\r\n    const handleDragEnter = (event) => {\r\n      const { currentTarget: element } = event;\r\n      const { id: targetIndex } = element;\r\n\r\n      // Fix fire dragenter many time\r\n      if (!finishCheck.current) {\r\n        if (targetIndex === enterIndex.current) {\r\n          setFinishCheck(true);\r\n        } else {\r\n          return;\r\n        }\r\n      }\r\n      if (targetIndex === srcIndex.current) {\r\n        element.style.opacity = \"0.4\";\r\n        return;\r\n      }\r\n\r\n      onChoosingAnimationStyle({\r\n        start: parseInt(srcIndex.current),\r\n        end: parseInt(targetIndex),\r\n        displayStyle: displayStyle,\r\n      });\r\n      const arrangedOrderList = onRearrangeDataList({\r\n        dataArr: [...orderList.current],\r\n        srcIndex: orderList.current.indexOf(parseInt(srcIndex.current)),\r\n        targetIndex: orderList.current.indexOf(parseInt(targetIndex)),\r\n      });\r\n      setOrderList(arrangedOrderList);\r\n    };\r\n\r\n    const handleDragLeave = ({ target: element }) => {\r\n      element.style.opacity = \"1\";\r\n    };\r\n\r\n    const handleDrop = (event) => {\r\n      event.stopImmediatePropagation();\r\n      handleDragLeave(event);\r\n\r\n      const {\r\n        target: { id },\r\n      } = event;\r\n      const oldIndex = event.dataTransfer.getData(\"startIndex\");\r\n      const newIndex = orderList.current.indexOf(parseInt(id));\r\n\r\n      handleIndexUpdate(oldIndex, newIndex);\r\n      setIsReverting(false);\r\n    };\r\n\r\n    const handleDropContainer = (event) => {\r\n      event.stopImmediatePropagation();\r\n      const fullHeightItemRow =\r\n        Math.floor(data.length / numItemRow) * movingUnit.height;\r\n      const oldIndex = event.dataTransfer.getData(\"startIndex\");\r\n\r\n      setIsReverting(false);\r\n      handleDragLeave(event);\r\n      if (event.offsetY > fullHeightItemRow) {\r\n        const lastElm = document.querySelector(\r\n          `.${className} .${subClassName}:last-child`\r\n        );\r\n        const event = new Event(\"dragenter\");\r\n\r\n        lastElm.dispatchEvent(event);\r\n        setIsDropOnContainer(true);\r\n        handleIndexUpdate(oldIndex, data.length - 1);\r\n        return;\r\n      }\r\n      handleIndexUpdate(\r\n        oldIndex,\r\n        orderList.current.indexOf(parseInt(oldIndex))\r\n      );\r\n    };\r\n\r\n    // Add event listeners\r\n    const container = document.querySelector(`.${className}`);\r\n    container.addEventListener(\"drop\", handleDropContainer, false);\r\n\r\n    const items = document.querySelectorAll(`.${className} .${subClassName}`);\r\n    items.forEach((e) => {\r\n      e.addEventListener(\"dragstart\", handleDragStart, false);\r\n      e.addEventListener(\"dragend\", handleDragEnd, false);\r\n      e.addEventListener(\"dragenter\", handleDragEnter, false);\r\n      e.addEventListener(\"dragleave\", handleDragLeave, false);\r\n      e.addEventListener(\"dragover\", handleDragOver, false);\r\n      e.addEventListener(\"drop\", handleDrop, false);\r\n    });\r\n\r\n    return () => {\r\n      // Remove event listeners\r\n      const items = document.querySelectorAll(`.${className} .${subClassName}`);\r\n      items.forEach((e) => {\r\n        e.removeEventListener(\"dragstart\", handleDragStart, false);\r\n        e.removeEventListener(\"dragend\", handleDragEnd, false);\r\n        e.removeEventListener(\"dragenter\", handleDragEnter, false);\r\n        e.removeEventListener(\"dragleave\", handleDragLeave, false);\r\n        e.removeEventListener(\"dragover\", handleDragOver, false);\r\n        e.removeEventListener(\"drop\", handleDrop, false);\r\n      });\r\n\r\n      const container = document.querySelector(`.${className}`);\r\n      container.removeEventListener(\"drop\", handleDropContainer, false);\r\n    };\r\n  }, [data]);\r\n\r\n  const onRearrangeDataList = ({ dataArr, srcIndex, targetIndex }) => {\r\n    const srcItem = dataArr[srcIndex];\r\n    dataArr.splice(srcIndex, 1);\r\n    dataArr.splice(targetIndex, 0, srcItem);\r\n    return [...dataArr];\r\n  };\r\n\r\n  const onChoosingAnimationStyle = ({ start, end, displayStyle }) => {\r\n    let elms = document.querySelectorAll(`.${className} .${subClassName}`);\r\n    const startIndex = orderList.current.indexOf(start);\r\n    const endIndex = orderList.current.indexOf(end);\r\n\r\n    switch (displayStyle) {\r\n      case \"list\":\r\n        handleAddingListAnimation({\r\n          startIndex,\r\n          endIndex,\r\n          elms,\r\n        });\r\n        break;\r\n      case \"grid\":\r\n        handleAddingGridAnimation({\r\n          startIndex,\r\n          endIndex,\r\n          elms,\r\n        });\r\n        setTimeout(() => {\r\n          onEnablePointerEvents();\r\n        }, 400);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n  const handleAddingListAnimation = ({ startIndex, endIndex, elms }) => {\r\n    let deltaX = 0;\r\n    let deltaY = 0;\r\n\r\n    //  Move start point\r\n    deltaX = 0;\r\n    deltaY = (endIndex - startIndex) * movingUnit.height;\r\n    const elmIndex = orderList.current[startIndex];\r\n\r\n    const { x, y, z } = getCurrentTranslate(elms[elmIndex]);\r\n    elms[elmIndex].style.transition = `all 0s ease-out`;\r\n    elms[elmIndex].style.transform = `translate3d(${x + deltaX}px,${\r\n      y + deltaY\r\n    }px,${z}px)`;\r\n\r\n    // Move else points\r\n    deltaX = 0;\r\n    deltaY = startIndex < endIndex ? -movingUnit.height : movingUnit.height;\r\n    if (startIndex < endIndex) {\r\n      for (let i = startIndex + 1; i <= endIndex; i++) {\r\n        const elmIndex = orderList.current[i];\r\n        const { x, y, z } = getCurrentTranslate(elms[elmIndex]);\r\n\r\n        elms[elmIndex].style.transform = `translate3d(${x + deltaX}px,${\r\n          y + deltaY\r\n        }px,${z}px)`;\r\n      }\r\n      return;\r\n    }\r\n    for (let i = startIndex - 1; i >= endIndex; i--) {\r\n      const elmIndex = orderList.current[i];\r\n      const { x, y, z } = getCurrentTranslate(elms[elmIndex]);\r\n\r\n      elms[elmIndex].style.transform = `translate3d(${x + deltaX}px,${\r\n        y + deltaY\r\n      }px,${z}px)`;\r\n    }\r\n  };\r\n  const handleAddingGridAnimation = ({ startIndex, endIndex, elms }) => {\r\n    let deltaX = 0;\r\n    let deltaY = 0;\r\n\r\n    const crossMovingIdxs = detectCrossMovingIdxs(startIndex, endIndex);\r\n    const numRowDiff = detectNumDiffRow(startIndex, endIndex);\r\n    const isSameRow = numRowDiff === 0 ? true : false;\r\n\r\n    // Moving start point\r\n    if (isSameRow) {\r\n      deltaX = (endIndex - startIndex) * movingUnit.width;\r\n    } else {\r\n      if (startIndex < endIndex) {\r\n        deltaX =\r\n          (endIndex - (startIndex + numRowDiff * numItemRow)) *\r\n          movingUnit.width;\r\n        deltaY = numRowDiff * movingUnit.height;\r\n      } else {\r\n        deltaX =\r\n          (endIndex - (startIndex - numRowDiff * numItemRow)) *\r\n          movingUnit.width;\r\n        deltaY = numRowDiff * -movingUnit.height;\r\n      }\r\n    }\r\n\r\n    const elmIndex = orderList.current[startIndex];\r\n    const { x, y, z } = getCurrentTranslate(elms[elmIndex]);\r\n    elms[elmIndex].style.transition = `all 0s ease-out`;\r\n    elms[elmIndex].style.transform = `translate3d(${x + deltaX}px,${\r\n      y + deltaY\r\n    }px,${z}px)`;\r\n\r\n    // Moving else points\r\n    deltaX = startIndex < endIndex ? -movingUnit.width : movingUnit.width;\r\n    deltaY = 0;\r\n\r\n    if (startIndex < endIndex) {\r\n      for (let i = startIndex + 1; i <= endIndex; i++) {\r\n        const elmIndex = orderList.current[i];\r\n\r\n        // Turn off catch events on moving cross\r\n        if (crossMovingIdxs.includes(i) && i !== startIndex && i !== endIndex) {\r\n          elms[elmIndex].style.pointerEvents = \"none\";\r\n        }\r\n        if (crossMovingIdxs.includes(i)) {\r\n          deltaX = (numItemRow - 1) * movingUnit.width;\r\n          deltaY = -movingUnit.height;\r\n        } else {\r\n          deltaX = startIndex < endIndex ? -movingUnit.width : movingUnit.width;\r\n          deltaY = 0;\r\n        }\r\n\r\n        const { x, y, z } = getCurrentTranslate(elms[elmIndex]);\r\n        elms[elmIndex].style.transform = `translate3d(${x + deltaX}px,${\r\n          y + deltaY\r\n        }px,${z}px)`;\r\n      }\r\n    } else {\r\n      for (let i = startIndex - 1; i >= endIndex; i--) {\r\n        const elmIndex = orderList.current[i];\r\n\r\n        // Turn off catch events on moving cross\r\n        if (crossMovingIdxs.includes(i) && i !== startIndex && i !== endIndex) {\r\n          elms[elmIndex].style.pointerEvents = \"none\";\r\n        }\r\n\r\n        if (crossMovingIdxs.includes(i)) {\r\n          deltaX = (numItemRow - 1) * -movingUnit.width;\r\n          deltaY = movingUnit.height;\r\n        } else {\r\n          deltaX = startIndex < endIndex ? -movingUnit.width : movingUnit.width;\r\n          deltaY = 0;\r\n        }\r\n\r\n        const { x, y, z } = getCurrentTranslate(elms[elmIndex]);\r\n        elms[elmIndex].style.transform = `translate3d(${x + deltaX}px,${\r\n          y + deltaY\r\n        }px,${z}px)`;\r\n      }\r\n    }\r\n  };\r\n  const onRevertingDataList = () => {\r\n    const elms = document.querySelectorAll(`.${className} .${subClassName}`);\r\n    for (let i = 0; i < elms.length; i++) {\r\n      elms[i].style.transform = \"translate3d(0px,0px,0px)\";\r\n    }\r\n  };\r\n\r\n  const onRemovingTransition = () => {\r\n    const elms = document.querySelectorAll(`.${className} .${subClassName}`);\r\n    for (let i = 0; i < elms.length; i++) {\r\n      elms[i].style.transition = \"all 0s ease-out\";\r\n    }\r\n  };\r\n\r\n  const onAddingTransition = () => {\r\n    const elms = document.querySelectorAll(`.${className} .${subClassName}`);\r\n    for (let i = 0; i < elms.length; i++) {\r\n      elms[i].style.transition = \"all 0.4s ease-out\";\r\n    }\r\n  };\r\n\r\n  // Only for image grid\r\n  const detectCrossMovingPoints = () => {\r\n    let startPoints = [];\r\n    let endPoints = [];\r\n    for (let i = numItemRow; i < orderList.current.length; i += numItemRow) {\r\n      startPoints.push(i);\r\n      endPoints.push(i - 1);\r\n    }\r\n    startPoints.unshift(0);\r\n    endPoints.push(orderList.current.length - 1);\r\n\r\n    return { startPoints, endPoints };\r\n  };\r\n\r\n  const detectCrossMovingIdxs = (start, end) => {\r\n    const { startPoints, endPoints } = detectCrossMovingPoints();\r\n\r\n    const crossMovingIdxs =\r\n      start < end\r\n        ? startPoints.filter((item) => item >= start && item <= end)\r\n        : endPoints.filter((item) => item >= end && item <= start);\r\n\r\n    return crossMovingIdxs;\r\n  };\r\n\r\n  const detectNumDiffRow = (start, end) => {\r\n    const { startPoints, endPoints } = detectCrossMovingPoints();\r\n    let belongStartIdx;\r\n    let belongEndIdx;\r\n\r\n    for (let i = 0; i < startPoints.length; i++) {\r\n      if (startPoints[i] <= start && start <= endPoints[i]) {\r\n        belongStartIdx = i;\r\n      }\r\n      if (startPoints[i] <= end && end <= endPoints[i]) {\r\n        belongEndIdx = i;\r\n      }\r\n    }\r\n\r\n    return Math.abs(belongEndIdx - belongStartIdx);\r\n  };\r\n\r\n  const getCurrentTranslate = (element) => {\r\n    const values = element.style.transform.split(/\\w+\\(|\\);?/);\r\n    const transform = values[1]\r\n      .split(/,\\s?/g)\r\n      .map((numStr) => parseInt(numStr));\r\n\r\n    return {\r\n      x: transform[0],\r\n      y: transform[1],\r\n      z: transform[2],\r\n    };\r\n  };\r\n\r\n  const onEnablePointerEvents = () => {\r\n    const elms = document.querySelectorAll(`.${className} .${subClassName}`);\r\n    for (let i = 0; i < elms.length; i++) {\r\n      elms[i].style.pointerEvents = \"initial\";\r\n    }\r\n  };\r\n\r\n  return <App data={data} itemSize={itemSize} margin={margin} />;\r\n};\r\n\r\nexport default enhance;\r\n","import React from \"react\";\r\nimport enhance from \"../enhance\";\r\nimport \"./style.css\";\r\n\r\nconst ImageGrid = ({ itemSize, margin, data }) => {\r\n  return (\r\n    <div\r\n      className=\"list__image__container\"\r\n      onDragOver={(event) => {\r\n        if (event.preventDefault) {\r\n          event.preventDefault();\r\n        }\r\n      }}\r\n      onDragEnter={(event) => {\r\n        if (event.preventDefault) {\r\n          event.preventDefault();\r\n        }\r\n      }}\r\n    >\r\n      {data.map((img, index) => (\r\n        <img\r\n          id={index}\r\n          className=\"img__wrap\"\r\n          style={{\r\n            width: itemSize.width,\r\n            height: itemSize.height,\r\n            margin: margin,\r\n            transform: \"translate3d(0px,0px,0px)\",\r\n            // remove whitespace in break inline\r\n            display: \"block\",\r\n            float: \"left\",\r\n            border: 0,\r\n            pointerEvents: \"initial\",\r\n          }}\r\n          title={index}\r\n          src={img.url}\r\n          alt=\"images\"\r\n          draggable=\"true\"\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default enhance(ImageGrid);\r\n","import React from \"react\";\r\nimport enhance from \"../enhance\";\r\n\r\nimport \"./style.css\";\r\n\r\nconst DataList = ({ itemSize, margin, data }) => {\r\n  return (\r\n    <div\r\n      className=\"flex column list__data__container\"\r\n      onDragOver={(event) => {\r\n        if (event.preventDefault) {\r\n          event.preventDefault();\r\n        }\r\n      }}\r\n      onDragEnter={(event) => {\r\n        if (event.preventDefault) {\r\n          event.preventDefault();\r\n        }\r\n      }}\r\n    >\r\n      {data.map((item, index) => (\r\n        <div\r\n          id={index}\r\n          className=\"flex  item__wrap\"\r\n          style={{\r\n            background: \"lightgray\",\r\n            transform: \"translate3d(0px,0px,0px)\",\r\n            margin: margin,\r\n          }}\r\n          draggable=\"true\"\r\n        >\r\n          <img\r\n            style={{\r\n              width: itemSize.width,\r\n              height: itemSize.height,\r\n              pointerEvents: \"none\",\r\n            }}\r\n            className=\"m-4\"\r\n            alt={item.title}\r\n            src={item.thumb}\r\n          />\r\n\r\n          <div className=\"flex column\" style={{ pointerEvents: \"none\" }}>\r\n            <div style={{ pointerEvents: \"none\" }}>{item.title}</div>\r\n            <div style={{ pointerEvents: \"none\" }}>{item.sub}</div>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default enhance(DataList);\r\n","import React from \"react\";\r\n\r\nimport ImageGrid from \"./components/ImageGrid\";\r\nimport DataList from \"./components/DataList\";\r\n\r\nimport EXAMPLE_IMAGES from \"./data\";\r\n\r\nconst EXAMPLE_DATA = EXAMPLE_IMAGES.map((img, index) => ({\r\n  thumb: img.url,\r\n  title: `Title ${index}`,\r\n  sub: `Sub ${index}`,\r\n}));\r\n\r\nfunction App(props) {\r\n  function handleIndexUpdate(oldIndex, newIndex) {\r\n    console.log(\"handleIndexUpdate\", oldIndex, newIndex);\r\n  }\r\n\r\n  const ROW_WIDTH = 800;\r\n  const MARGIN = 4;\r\n  const WIDTH_ITEM_GRID = 50;\r\n  const HEIGHT_ITEM_GRID = 50;\r\n\r\n  const WIDTH_ITEM_LIST = 40;\r\n  const HEIGHT_ITEM_LIST = 40;\r\n\r\n  return (\r\n    <div className=\"flex column align-center justify-center\">\r\n      <div\r\n        style={{ width: ROW_WIDTH, display: \"flex\", flexDirection: \"column\" }}\r\n      >\r\n        <ImageGrid\r\n          displayStyle=\"grid\"\r\n          className=\"list__image__container\"\r\n          subClassName=\"img__wrap\"\r\n          dataList={EXAMPLE_IMAGES}\r\n          movingUnit={{\r\n            width: WIDTH_ITEM_GRID + 2 * MARGIN,\r\n            height: HEIGHT_ITEM_GRID + 2 * MARGIN,\r\n          }}\r\n          itemSize={{ width: WIDTH_ITEM_GRID, height: HEIGHT_ITEM_GRID }}\r\n          margin={MARGIN}\r\n          numItemRow={Math.floor(ROW_WIDTH / (WIDTH_ITEM_GRID + 2 * MARGIN))}\r\n          handleIndexUpdate={handleIndexUpdate}\r\n        />\r\n        <DataList\r\n          displayStyle=\"list\"\r\n          className=\"list__data__container\"\r\n          subClassName=\"item__wrap\"\r\n          dataList={EXAMPLE_DATA}\r\n          movingUnit={{\r\n            width: WIDTH_ITEM_LIST + 4 * MARGIN,\r\n            height: HEIGHT_ITEM_LIST + 4 * MARGIN,\r\n          }}\r\n          itemSize={{ width: WIDTH_ITEM_LIST, height: HEIGHT_ITEM_LIST }}\r\n          margin={MARGIN}\r\n          handleIndexUpdate={handleIndexUpdate}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n// import * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n// serviceWorker.unregister();\r\n"],"sourceRoot":""}